---
name: Build and deploy
on:
  # Run when manually triggered
  workflow_dispatch:
  # Run on each PR
  pull_request:
  # Run when a new commit is pushed to the main branch
  push:
    branches: [main]
permissions: {}
jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # ratchet:actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@21a544727d0c62386e78b4befe52d19ad12692e3  # ratchet:DeterminateSystems/nix-installer-action@v17
      - name: Cache Nix environment
        uses: DeterminateSystems/magic-nix-cache-action@def9f5a5c6a6b8751c0534e8813a5d0ad2635660  # ratchet:DeterminateSystems/magic-nix-cache-action@v11
      - name: Use Nix dev shell for subsequent steps
        uses: rrbutani/use-nix-shell-action@59a52b2b9bbfe3cc0e7deb8f9059abe37a439edf  # ratchet:rrbutani/use-nix-shell-action@v1
        with:
          extraNixOptions: --accept-flake-config
      - name: Run pre-commit
        run: pre-commit run --all-files
        env:
          # Prevent this action failing when running on the main branch
          SKIP: no-commit-to-branch
      - name: Download data
        run: just download
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: just build
      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@ae36ac1b3d1ad3646eecb5631977e7314d3a6a2f  # ratchet:jsmrcaga/action-netlify-deploy@v2.4.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_TO_PROD: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          build_directory: build
          install_command: echo 'Skipping installing the dependencies'
          build_command: echo 'Skipping building the web files'
